---
import { SITE_DATA } from "@data/siteData";
import { Icon } from "astro-icon/components";

import ThemeToggle from "./ThemeToggle.astro";

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: "About", href: "#about" },
	{ label: "Experience", href: "#experiences" },
	{ label: "Projects", href: "#projects" },
	{ label: "Contact", href: "#contact" },
];

const isCurrentSection = (href: string) => {
	return href === Astro.url.hash;
};

interface Props {
	showNavMenu: boolean;
}
const { showNavMenu } = Astro.props;
---

<nav>
	<div class="menu-header">
		<a href="/" class="site-title"> {SITE_DATA.seo.siteTitle} </a>

		<div class="header-actions">
			<div class="mobile-theme-toggle">
				<ThemeToggle />
			</div>
			<menu-button>
				<template>
					<button class="menu-button" aria-expanded="false">
						<span class="sr-only">Menu</span>
						<Icon name="carbon:menu" />
					</button>
				</template>
			</menu-button>
		</div>
	</div>

	<noscript>
		<ul class="nav-items" aria-hidden={!showNavMenu}>
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a
							aria-current={
								isCurrentSection(href) ? "page" : null
							}
							class="link"
							href={href}
						>
							{label}
						</a>
					</li>
				))
			}
		</ul>
	</noscript>
	<div id="menu-content" class="menu-content">
		{
			showNavMenu && (
				<ul class="nav-items">
					{textLinks.map(({ label, href }) => (
						<li>
							<a
								aria-current={
									isCurrentSection(href) ? "page" : null
								}
								class="link"
								href={href}
								role="navigation"
							>
								{label}
							</a>
						</li>
					))}
				</ul>
			)
		}
		<div class="theme-toggle desktop-theme-toggle">
			<ThemeToggle />
		</div>
	</div>
</nav>
<script src="../scripts/navbar.ts"></script>
<style>
	nav {
		z-index: 1;
		top: 0;
		width: 100%;
		position: fixed;
		background-color: var(--bg-color);
		font-family: var(--font-body);
		transition: var(--theme-transition);
		display: flex;
		flex-direction: column;
	}

	.menu-header {
		position: relative;
		display: flex;
		background-color: var(--bg-color);
		justify-content: space-between;
		gap: 0.5rem;
		padding: 1rem;
		width: 100%;
	}
	.mobile-page-title {
		display: block;
	}

	.site-title,
	.page-title,
	.mobile-page-title {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		line-height: 1.1;
		color: var(--gray-0);
		text-decoration: none;
		font-family: var(--font-brand);
		font-weight: 600;
		font-size: var(--text-lg);
	}
	.page-title {
		font-weight: 400;
		display: none;
	}
	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--secondary-text-color);
		background: transparent;
		cursor: pointer;
	}

	.menu-button[aria-expanded="true"] {
		color: var(--gray-0);
	}

	.menu-button[hidden] {
		display: none;
	}

	.menu-content.open {
		transform: translateY(70px);
	}
	.menu-content {
		z-index: -99;
		position: absolute;
		display: block;
		left: 0;
		right: 0;
		height: auto;
		transition: all var(--theme-transition);
		background-color: var(--gray-800);
		transform: translateY(-100%);
	}

	.nav-items {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		line-height: 1.2;
		list-style: none;
		padding: 2rem;
		border-bottom: 1px solid var(--gray-800);
		font-weight: 400;
		text-transform: uppercase;
	}

	.link {
		display: inline-block;
		color: var(--gray-100);
		text-decoration: none;
	}

	.link[aria-current] {
		color: var(--gray-0);
	}

	.theme-toggle {
		display: flex;
		align-items: center;
		justify-content: end;
		height: calc(var(--icon-size) + 2 * var(--icon-padding));
	}

	.header-actions {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 1.3rem;
	}

	.mobile-theme-toggle {
		display: block;
	}

	.desktop-theme-toggle {
		display: none;
	}

	@media (min-width: 50em) {
		nav {
			display: grid;
			background-color: transparent;
			grid-template-columns: 2fr 1fr auto;
			align-items: center;
			padding: 2.5rem 3rem;
			gap: 1rem;
			flex-direction: row;
		}
		.mobile-page-title {
			display: none;
		}
		.page-title {
			display: block;
			color: var(--accent-regular);
		}

		.menu-header {
			background-color: transparent;
			padding: 0;
		}

		.site-title {
			font-size: var(--text-xl);
		}

		.menu-content {
			display: contents;
		}

		.nav-items {
			position: relative;
			flex-direction: row;
			justify-content: flex-end;
			font-size: var(--text-sm);
			border: 0;
			gap: 0;
			padding: 0 0.5625rem;
		}

		.link {
			margin: 1rem;
			padding: 0.1rem 0;
			border-bottom: 3px solid transparent;
			font-size: var(--text-sm);
			transition: all 0.2s ease-in-out;
			color: var(--secondary-text-color);
		}

		.link:hover,
		.link:focus {
			color: var(--gray-0);
			border-bottom-color: var(--accent-regular);
		}

		.link[aria-current="page"] {
			color: var(--gray-0);
			border-bottom-color: var(--accent-regular);
		}
		.page-title {
			font-size: var(--text-xl);
		}

		.mobile-theme-toggle {
			display: none;
		}

		.desktop-theme-toggle {
			display: flex;
		}
	}

	@media (forced-colors: active) {
		.link[aria-current="page"] {
			color: SelectedItem;
		}
	}
</style>
