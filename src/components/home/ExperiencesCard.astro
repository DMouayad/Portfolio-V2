---
import Card from "@components/Card.astro";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";
import ExperiencePopup from "./ExperiencePopup.astro";
const experiences = (await getCollection("experience")).sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
);
---

<div class="experiences-card">
    <Card title="Experiences">
        <p>These are some of my freelance work projects.</p>
        {
            experiences.map((experience) => {
                return (
                    <div popover id={experience.id}>
                        <ExperiencePopup id={experience.id} item={experience} />
                    </div>
                    <button popovertarget={experience.id} class="experience">
                        <div class="experience-title">
                            <span>{experience.data.title}</span>
                            <Icon class="icon" size={16} name="carbon:popup" />
                        </div>

                        <p>{experience.data.description}</p>
                    </button>
                );
            })
        }
    </Card>
</div>

<style>
    .experiences-card {
        @media (min-width: 768px) {
            grid-column: span 2 / span 2;
            grid-row: span 5 / span 5;
        }
    }
    :global(.experiences-card .card .content) {
        display: grid;
        grid-template-columns: repeat(2, minmax(0px, 1fr));
        align-items: center;
        gap: 20px !important;
    }

    .experience {
        display: flex;
        flex-direction: column;
        width: 100%;
        border-bottom: 1px solid var(--card-border);
        gap: 0.5rem;
        padding: 1rem 0;
    }

    button {
        outline: none;
        background-color: transparent;
        box-shadow: none;
        border: none;
        color: var(--gray-100);
        font-family: var(--font-body);
        cursor: pointer;
        padding: 0;
        text-align: start;
    }
    .experience p {
        padding-block: 4px;
    }
    .experience-title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: var(--text-base);
        font-weight: 500;
        a {
            text-decoration: underline;
        }
    }
    .experience-title .icon {
        transition-property: transform, color;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 300ms;
        transition-duration: 100ms;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        stroke: currentColor;
        /* transform: translateX(-0.32rem); */
    }
    .experience:hover {
        color: var(--accent-regular);
        .icon {
            transform: scale3d(1.3, 1.3, 1.3);
        }
    }
</style>
