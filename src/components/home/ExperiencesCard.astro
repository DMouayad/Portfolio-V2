---
import Card from "@components/Card.astro";
import { getCollection } from "astro:content";
const experiences = (await getCollection("experience")).sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
);
---

<div class="experiences-card">
    <Card title="Experiences">
        <p>These are some of my freelance work projects.</p>
        {
            experiences.map((experience) => {
                return (
                    <a class="experience" href={`/experience/${experience.id}`}>
                        <div class="experience-title">
                            <span>
                                {experience.data.title} -{" "}
                                {experience.data.publishDate.getFullYear()}
                            </span>
                            <span class="link-txt">View details </span>
                        </div>

                        <p>{experience.data.description}</p>
                    </a>
                );
            })
        }
    </Card>
</div>

<style>
    .experiences-card {
        @media (min-width: 768px) {
            grid-column: span 2 / span 2;
            grid-row: span 5 / span 5;
        }
    }

    .experience {
        display: flex;
        flex-direction: column;
        width: 100%;
        border-bottom: 1px solid var(--card-border);
        gap: 0.5rem;
        padding: 1rem 0;
    }

    a {
        background-color: transparent;
        color: var(--gray-0);
        text-decoration: none;
    }
    .experience p {
        padding-block: 4px;
    }
    .experience-title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: var(--text-base);
        font-weight: 500;
        a {
            text-decoration: underline;
        }
    }
    .experience-title .icon {
        transition-property: transform, color;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 300ms;
        transition-duration: 100ms;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        stroke: currentColor;
    }
    .link-txt {
        text-decoration: underline;
        font-size: var(--text-sm);
    }
    .experience:hover {
        .link-txt {
            color: var(--accent-regular);
        }
    }
</style>
